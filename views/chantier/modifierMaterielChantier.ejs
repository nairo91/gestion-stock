<!--modifierMaterielChantier-->
<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Modifier l'enregistrement du chantier</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <style>
    body {
      background: radial-gradient(circle at top, #381b63 0%, #1a082f 35%, #0d041c 100%);
      color: #f0eaff;
      font-family: "Segoe UI", Roboto, sans-serif;
      min-height: 100vh;
    }

    .page-wrapper {
      max-width: 900px;
      margin: 0 auto;
      padding: 3rem 1.5rem 2rem;
    }

    .page-header {
      display: flex;
      align-items: center;
      gap: 1.25rem;
      padding: 1.5rem 2rem;
      background: linear-gradient(135deg, rgba(128, 90, 213, 0.2), rgba(93, 63, 211, 0.35));
      border: 1px solid rgba(150, 122, 255, 0.2);
      border-radius: 1rem;
      backdrop-filter: blur(4px);
      box-shadow: 0 20px 45px rgba(25, 8, 52, 0.45);
      margin-bottom: 2rem;
    }

    .page-header img {
      width: 64px;
      height: 64px;
      object-fit: contain;
    }

    .page-header h1 {
      font-size: 1.85rem;
      margin: 0;
      color: #f7f3ff;
      font-weight: 700;
    }

    .form-card {
      background: linear-gradient(160deg, rgba(36, 15, 64, 0.92), rgba(25, 9, 47, 0.95));
      border-radius: 1rem;
      box-shadow: 0 25px 55px rgba(8, 2, 20, 0.65);
      padding: 2.5rem;
      border: 1px solid rgba(138, 110, 214, 0.35);
    }

    h2 {
      font-size: 1.65rem;
      margin-bottom: 1.5rem;
      color: #d9c7ff;
      font-weight: 600;
    }

    .form-label {
      font-weight: 600;
      color: #c8b3ff;
    }

    .form-control,
    .form-select {
      border-radius: 0.5rem;
      border: 1px solid rgba(151, 130, 211, 0.45);
      background-color: rgba(18, 6, 35, 0.85);
      color: #ffffff;
      height: calc(1.5em + 1.2rem + 2px);
      padding: 0.6rem 0.85rem;
      transition: border-color 0.2s, box-shadow 0.2s, background-color 0.2s;
      caret-color: #ffffff;
    }

    .form-control:focus,
    .form-select:focus {
      border-color: #9f7aea;
      box-shadow: 0 0 0 0.25rem rgba(159, 122, 234, 0.25);
      background-color: rgba(26, 11, 46, 0.9);
      color: #ffffff;
    }

    .form-control option,
    .form-select option {
      background-color: #23103f;
      color: #ffffff;
    }

    .form-select option:checked,
    .form-select option:hover,
    .form-control option:checked,
    .form-control option:hover {
      background-color: #3a1f6d;
      color: #ffffff;
    }

    .form-text {
      color: #bba7ff;
    }

    .text-muted {
      color: rgba(230, 219, 255, 0.65) !important;
    }

    .input-group-text,
    .input-group-button {
      background-color: rgba(88, 63, 143, 0.6);
      border: 1px solid rgba(151, 130, 211, 0.45);
      color: #f0eaff;
    }

    .btn-outline-secondary {
      color: #e2d7ff;
      border-color: rgba(159, 122, 234, 0.45);
      background: rgba(113, 84, 187, 0.15);
    }

    .btn-outline-secondary:hover,
    .btn-outline-secondary:focus {
      color: #ffffff;
      background: rgba(159, 122, 234, 0.35);
      border-color: rgba(159, 122, 234, 0.65);
    }

    .btn-success {
      background: linear-gradient(135deg, #8f5cf3, #5b34c2);
      border-color: #5b34c2;
      font-weight: 600;
      padding: 0.6rem 1.4rem;
      border-radius: 999px;
      box-shadow: 0 12px 25px rgba(94, 52, 194, 0.35);
      transition: transform 0.2s, box-shadow 0.2s;
    }

    .btn-success:hover {
      background: linear-gradient(135deg, #a77bff, #6b3fdd);
      transform: translateY(-1px);
      box-shadow: 0 18px 35px rgba(94, 52, 194, 0.45);
    }

    .btn-secondary {
      background: rgba(113, 84, 187, 0.25);
      border: 1px solid rgba(159, 122, 234, 0.35);
      color: #d8c8ff;
      font-weight: 500;
      border-radius: 999px;
      transition: background-color 0.2s, color 0.2s, transform 0.2s;
    }

    .btn-secondary:hover,
    .btn-secondary:focus {
      background: rgba(159, 122, 234, 0.35);
      color: #ffffff;
      transform: translateY(-1px);
    }

    .btn-danger {
      background: linear-gradient(135deg, #a023c0, #6b197a);
      border-color: #6b197a;
      color: #fff;
      border-radius: 999px;
      box-shadow: 0 12px 25px rgba(108, 25, 122, 0.35);
    }

    .btn-danger:hover {
      background: linear-gradient(135deg, #c446df, #7a2191);
      border-color: #7a2191;
    }

    a.btn-secondary {
      text-decoration: none;
      margin-top: 1rem;
    }

    a.btn-secondary:hover {
      text-decoration: none;
    }

    #preview-container p {
      color: #c8b3ff;
      font-weight: 500;
    }

    #preview-container img {
      max-width: 320px;
      width: 100%;
      border-radius: 0.75rem;
      border: 1px solid rgba(151, 130, 211, 0.35);
      box-shadow: 0 12px 24px rgba(8, 2, 20, 0.55);
    }

    #preview-container .current-photo {
      margin-top: 0.75rem;
    }

    #preview-image {
      display: none;
      margin-top: 1rem;
    }

    select#emplacementId.form-control {
      background-color: rgba(18, 6, 35, 0.85);
    }

    @media (max-width: 576px) {
      .form-card {
        padding: 1.5rem;
      }

      .page-header {
        flex-direction: column;
        text-align: center;
      }
    }
  </style>
</head>
<body>
  <div class="page-wrapper">
    <header class="page-header">
      <img src="/images/logo.png" alt="Logo Gestion Stock">
      <div>
        <h1>Modifier un mat√©riel du chantier</h1>
        <p class="mb-0 text-muted">Ajustez les informations de <strong><%= mc.materiel.nom %></strong> pour le chantier
          <strong><%= mc.chantier.nom %></strong>.</p>
      </div>
    </header>
    <div class="form-card">
      <h2>Modifier l'enregistrement</h2>
      <form id="modifForm" action="/chantier/materielChantier/modifier/<%= mc.id %>" method="POST" enctype="multipart/form-data">

      <div class="mb-3">
  <label for="categorieSelect" class="form-label">Cat√©gorie</label>
  <% const cats = categories || []; %>
  <select class="form-select" name="categorie" id="categorieSelect" required>
    <option value="">-- Choisir une cat√©gorie --</option>
    <% cats.forEach(function(cat){ %>
      <option value="<%= cat %>" <%= mc.materiel.categorie === cat ? 'selected' : '' %>><%= cat %></option>
    <% }) %>
    <% if (mc.materiel.categorie && !cats.includes(mc.materiel.categorie)) { %>
      <option value="<%= mc.materiel.categorie %>" selected><%= mc.materiel.categorie %></option>
    <% } %>
  </select>
  <% if (user && user.role === 'admin') { %>
    <div class="d-flex flex-wrap gap-2 mt-2">
      <button type="button" id="addCategoryBtn" class="btn btn-secondary btn-sm">Ajouter Cat√©gorie</button>
      <button type="button" id="deleteCategoryBtn" class="btn btn-danger btn-sm">Supprimer Cat√©gorie</button>
    </div>
  <% } %>
</div>

      <div class="mb-3">
        <label for="quantite" class="form-label">Quantit√© actuelle : <strong><%= mc.quantite %></strong></label>
      </div>

      <div class="mb-3">
        <label for="quantite" class="form-label">Nouvelle quantit√©</label>
        <div class="d-flex align-items-center gap-2">
          <button type="button" class="btn btn-outline-secondary" onclick="changerQuantite(-1)">-</button>
          <input type="number" name="quantite" id="quantite" class="form-control" value="<%= mc.quantite %>" min="0">
          <button type="button" class="btn btn-outline-secondary" onclick="changerQuantite(1)">+</button>
        </div>
      </div>
      <div class="mb-3">
        <label for="quantitePrevue" class="form-label">Quantit√© pr√©vue</label>
        <input type="number" name="quantitePrevue" id="quantitePrevue" class="form-control" value="<%= mc.quantitePrevue || '' %>" min="0">
      </div>
      <div class="mb-3">
        <label for="dateLivraisonPrevue" class="form-label">Date de livraison pr√©vue</label>
        <div class="input-group">
          <button type="button" class="input-group-text input-group-button" id="datePickerButton" aria-label="Choisir une date">
            üìÖ
          </button>
          <input type="date" name="dateLivraisonPrevue" id="dateLivraisonPrevue" class="form-control" value="<%= mc.dateLivraisonPrevue ? mc.dateLivraisonPrevue.toISOString().split('T')[0] : '' %>">
        </div>
      </div>

      <div class="mb-3">
  <label for="designationSelect" class="form-label">D√©signation</label>
  <select id="designationSelect" name="designation" class="form-select">
    <option value="">-- S√©lectionner une d√©signation --</option>
  </select>
  <input type="text" class="form-control mt-2" id="nomMateriel" name="nomMateriel" value="<%= mc.materiel.nom %>" placeholder="Autre d√©signation">
  <% if (user && user.role === 'admin') { %>
    <div class="d-flex flex-wrap gap-2 mt-2">
      <button type="button" id="addDesignationBtn" class="btn btn-secondary btn-sm">Ajouter une d√©signation √† la cat√©gorie</button>
      <button type="button" id="deleteDesignationBtn" class="btn btn-danger btn-sm">Supprimer une d√©signation de la cat√©gorie</button>
    </div>
    <div class="form-text d-none" id="designationFeedback"></div>
  <% } %>
</div>
      <div class="mb-3">
        <label for="reference" class="form-label">R√©f√©rence</label>
        <input type="text" name="reference" id="reference" class="form-control" value="<%= mc.materiel.reference || '' %>">
      </div>
      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea name="description" id="description" class="form-control"><%= mc.materiel.description || '' %></textarea>
      </div>
      <div class="mb-3">
        <label for="prix" class="form-label">Prix</label>
        <input type="number" step="0.01" name="prix" id="prix" class="form-control" value="<%= mc.materiel.prix || '' %>">
      </div>
      <div class="mb-3">
        <label for="emplacementId" class="form-label">Nouvel emplacement</label>
        <select name="emplacementId" id="emplacementId" class="form-control">
          <option value="">-- Aucun --</option>
          <% emplacements.forEach(function(e) { %>
            <option value="<%= e.id %>" <%= (mc.materiel.emplacementId === e.id) ? 'selected' : '' %>>
              <%= e.nom %> (Chantier: <%= e.chantierId %>)
            </option>
          <% }) %>
        </select>
      </div>
      <div class="mb-3">
        <label for="fournisseur" class="form-label">Fournisseur</label>
        <input type="text" name="fournisseur" id="fournisseurInput" class="form-control" value="<%= mc.materiel.fournisseur || '' %>">
        <select id="fournisseurSelect" class="form-select mt-2">
          <option value="">-- S√©lectionner un fournisseur --</option>
          <option value="4 Pieds">4 Pieds</option>
          <option value="BRICOMAN">BRICOMAN</option>
          <option value="CEDEO">CEDEO</option>
          <option value="FORBO">FORBO</option>
          <option value="FOUSSIER">FOUSSIER</option>
          <option value="France'AIR">France'AIR</option>
          <option value="HUSSEIN">HUSSEIN</option>
          <option value="JM EXIM">JM EXIM</option>
          <option value="Jos√©">Jos√©</option>
          <option value="KINEDO">KINEDO</option>
          <option value="LES RIPEURS">LES RIPEURS</option>
          <option value="MPI">MPI</option>
          <option value="ODF">ODF</option>
          <option value="PIXELO">PIXELO</option>
          <option value="RICHARDSON">RICHARDSON</option>
          <option value="SANITINO">SANITINO</option>
          <option value="SONEPAR">SONEPAR</option>
          <option value="SOTEXPRO">SOTEXPRO</option>
          <option value="STMI">STMI</option>
          <option value="TARGETTI">TARGETTI</option>
          <option value="TEMPO">TEMPO</option>
          <option value="Wurth">Wurth</option>
          <option value="pure-com">pure-com</option>
          <option value="Autre">Autre</option>
        </select>
      </div>

      <div class="mb-3">
        <label for="rack" class="form-label">Rack</label>
        <input type="text" name="rack" id="rack" class="form-control" value="<%= mc.materiel.rack || '' %>">
      </div>

      <div class="mb-3">
        <label for="compartiment" class="form-label">Compartiment</label>
        <input type="text" name="compartiment" id="compartiment" class="form-control" value="<%= mc.materiel.compartiment || '' %>">
      </div>

  <div class="mb-3">
    <label for="niveau" class="form-label">Niveau</label>
    <input type="number" name="niveau" id="niveau" class="form-control" value="<%= mc.materiel.niveau || '' %>">
  </div>

  <div class="mb-3">
    <label for="remarque" class="form-label">Remarque</label>
    <textarea name="remarque" id="remarque" class="form-control"><%= mc.remarque || '' %></textarea>
  </div>

  <div class="mb-3">
    <label for="photo" class="form-label">Nouvelle photo (remplace l‚Äôancienne)</label>
    <input type="file" name="photo" id="photo" accept="image/*" class="form-control">
  </div>

      <div id="preview-container" class="mt-3">
        <% if (mc.materiel.photos && mc.materiel.photos.length > 0) { %>
          <p>Photo actuelle :</p>
          <img src="<%= mc.materiel.photos[0].chemin %>" alt="Photo actuelle de <%= mc.materiel.nom %>" class="current-photo">
        <% } %>

        <!--<p class="mt-2">Aper√ßu de la nouvelle photo :</p>-->
        <img id="preview-image" src="#" alt="Aper√ßu de la nouvelle photo" />
      </div>

      <div class="d-flex flex-wrap gap-3 mt-4">
        <button type="submit" class="btn btn-success">Enregistrer</button>
        <a href="/chantier" class="btn btn-secondary">Retour</a>
      </div>
    </form>
    </div>
  </div>

  <% if (user && user.role === 'admin') { %>
    <div class="modal fade" id="confirmDeleteCategoryModal" tabindex="-1" aria-labelledby="confirmDeleteCategoryLabel" aria-hidden="true">
      <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header bg-danger text-white">
            <h5 class="modal-title" id="confirmDeleteCategoryLabel">Confirmer la suppression</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer"></button>
          </div>
          <div class="modal-body">
            <p id="confirmDeleteCategoryMessage" class="mb-0"></p>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
            <button type="button" class="btn btn-danger" id="confirmDeleteCategoryBtn">Supprimer</button>
          </div>
        </div>
      </div>
    </div>
  <% } %>

 <script>
  document.addEventListener('DOMContentLoaded', function () {
    const inputPhoto = document.getElementById('photo');
    const previewImage = document.getElementById('preview-image');
    const dateInput = document.getElementById('dateLivraisonPrevue');
    const datePickerButton = document.getElementById('datePickerButton');

    if (inputPhoto) {
      inputPhoto.addEventListener('change', function () {
        const file = this.files[0];
        if (file && file.type.startsWith('image/')) {
          const reader = new FileReader();
          reader.onload = function (e) {
            previewImage.src = e.target.result;
            previewImage.style.display = 'block';
          };
          reader.readAsDataURL(file);
        } else {
          previewImage.src = '#';
          previewImage.style.display = 'none';
        }
      });
    }

    if (datePickerButton && dateInput) {
      const openDatePicker = () => {
        if (typeof dateInput.showPicker === 'function') {
          dateInput.showPicker();
        } else {
          dateInput.focus();
        }
      };
      datePickerButton.addEventListener('click', openDatePicker);
      datePickerButton.addEventListener('keydown', (event) => {
        if (event.key === 'Enter' || event.key === ' ') {
          event.preventDefault();
          openDatePicker();
        }
      });
    }
  });

  function changerQuantite(delta) {
    const input = document.getElementById('quantite');
    let value = parseInt(input.value || "0");
    value = Math.max(0, value + delta);
    input.value = value;
  }
</script>
  <script src="/js/bootstrap.bundle.min.js"></script>
  <script nonce="<%= nonce %>">
    document.addEventListener("DOMContentLoaded", function () {
      const fSelect = document.getElementById("fournisseurSelect");
      const fInput = document.getElementById("fournisseurInput");
      if (fSelect) {
        if (fInput && fInput.value) {
          Array.from(fSelect.options).forEach(opt => {
            if (opt.value.toLowerCase() === fInput.value.toLowerCase()) {
              opt.selected = true;
            }
          });
        }
        fSelect.addEventListener("change", () => {
          fInput.value = fSelect.value;
        });
        if (fInput) {
          fInput.addEventListener("blur", () => {
            const val = fInput.value.trim();
            if (!val) return;
            const exists = Array.from(fSelect.options).some(opt => opt.value.toLowerCase() === val.toLowerCase());
            if (!exists) {
              const option = document.createElement("option");
              option.value = val;
              option.textContent = val;
              fSelect.appendChild(option);
            }
            fSelect.value = val;
          });
        }
      }

      const categorieSelect = document.getElementById('categorieSelect');
      const addBtn = document.getElementById('addCategoryBtn');
      if (addBtn) {
        addBtn.addEventListener('click', async () => {
          const nom = prompt('Nouvelle cat√©gorie :');
          if (!nom) return;
          const body = new URLSearchParams();
          body.append('nom', nom);
          const resp = await fetch('/chantier/ajouter-categorie', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: body.toString()
          });
          if (resp.ok) {
            if (!categorieSelect) return;
            const option = document.createElement('option');
            option.value = nom;
            option.textContent = nom;
            categorieSelect.appendChild(option);
            categorieSelect.value = nom;
            categorieSelect.dispatchEvent(new Event('change'));
          } else {
            alert("Erreur lors de l'ajout de la cat√©gorie");
          }
        });
      }
      const deleteBtn = document.getElementById('deleteCategoryBtn');
      const modalElement = document.getElementById('confirmDeleteCategoryModal');
      const confirmDeleteMessage = document.getElementById('confirmDeleteCategoryMessage');
      const confirmDeleteBtn = document.getElementById('confirmDeleteCategoryBtn');
      const deleteCategoryModal = modalElement && typeof bootstrap !== 'undefined'
        ? new bootstrap.Modal(modalElement)
        : null;
      let pendingCategoryValue = null;

      async function requestCategoryDeletion(valeur) {
        if (!categorieSelect) return false;
        const body = new URLSearchParams();
        body.append('nom', valeur);
        try {
          const resp = await fetch('/chantier/supprimer-categorie', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: body.toString()
          });
          if (resp.ok) {
            Array.from(categorieSelect.options).forEach(opt => {
              if (opt.value === valeur) opt.remove();
            });
            categorieSelect.value = '';
            if (categorieSelect.value) {
              categorieSelect.selectedIndex = -1;
            }
            categorieSelect.dispatchEvent(new Event('change'));
            return true;
          } else {
            const data = await resp.json().catch(() => null);
            alert(data?.message || "Erreur lors de la suppression de la cat√©gorie");
          }
        } catch (error) {
          console.error(error);
          alert("Erreur lors de la suppression de la cat√©gorie");
        }
        return false;
      }

      if (deleteBtn && categorieSelect) {
        deleteBtn.addEventListener('click', async () => {
          const valeur = categorieSelect.value;
          if (!valeur) {
            alert('Veuillez s√©lectionner une cat√©gorie √† supprimer.');
            return;
          }
          if (deleteCategoryModal && confirmDeleteBtn && confirmDeleteMessage) {
            pendingCategoryValue = valeur;
            confirmDeleteMessage.textContent = `Supprimer la cat√©gorie "${valeur}" ? Elle sera retir√©e de tous les mat√©riels.`;
            deleteCategoryModal.show();
          } else {
            if (!confirm(`Supprimer la cat√©gorie "${valeur}" ? Elle sera retir√©e de tous les mat√©riels.`)) {
              return;
            }
            await requestCategoryDeletion(valeur);
          }
        });
      }

      if (confirmDeleteBtn && deleteCategoryModal) {
        confirmDeleteBtn.addEventListener('click', async () => {
          if (!pendingCategoryValue) return;
          const originalText = confirmDeleteBtn.textContent;
          confirmDeleteBtn.disabled = true;
          confirmDeleteBtn.textContent = 'Suppression...';
          const success = await requestCategoryDeletion(pendingCategoryValue);
          confirmDeleteBtn.disabled = false;
          confirmDeleteBtn.textContent = originalText;
          if (success) {
            pendingCategoryValue = null;
            deleteCategoryModal.hide();
          }
        });
      }

      if (modalElement) {
        modalElement.addEventListener('hidden.bs.modal', () => {
          pendingCategoryValue = null;
        });
      }
      initDesignationDropdown("categorieSelect", "designationSelect", "nomMateriel", {
        addButtonId: "addDesignationBtn",
        deleteButtonId: "deleteDesignationBtn",
        feedbackId: "designationFeedback"
      });
    });
  </script>
  <script src="/js/designations.js" nonce="<%= nonce %>"></script>

</body>
</html>
