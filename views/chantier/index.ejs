<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Dashboard - Stock Chantier</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style.css">

  <style>
    @import url('https://cdn.jsdelivr.net/npm/@fontsource/inter@5.0.17/index.min.css');

    :root {
      --violet-dark: #0f021f;
      --violet-mid: #3b0a6a;
      --violet-light: #7b3ef3;
      --violet-accent: #a978ff;
      --card-bg: rgba(17, 6, 32, 0.72);
      --text-primary: #f7f4ff;
      --text-muted: rgba(247, 244, 255, 0.7);
      --navbar-h: 64px;
    }

    body {
      min-height: 100vh;
      background: radial-gradient(circle at top left, rgba(123, 62, 243, 0.35), transparent 45%),
                  radial-gradient(circle at bottom right, rgba(59, 10, 106, 0.6), transparent 55%),
                  linear-gradient(135deg, #080111 0%, #1a0533 38%, #2d0a52 100%);
      color: var(--text-primary);
      font-family: 'Inter', 'Segoe UI', sans-serif;
      backdrop-filter: blur(8px);
      margin: 0;
      padding-top: var(--navbar-h);
    }

    .navbar {
      background: linear-gradient(120deg, rgba(15, 2, 31, 0.9), rgba(59, 10, 106, 0.9));
      border-bottom: 1px solid rgba(169, 120, 255, 0.25);
      backdrop-filter: blur(12px);
    }

    .navbar.fixed-top,
    .navbar.sticky-top {
      z-index: 1030;
    }

    .navbar-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      font-weight: 600;
      letter-spacing: 0.05rem;
      color: #fff !important;
    }

    .navbar-brand img {
      height: 42px;
      width: auto;
    }

    #toggleMode {
      border-radius: 999px;
      border-color: rgba(255, 255, 255, 0.25);
      color: #fff;
    }

    #toggleMode:hover {
      background-color: rgba(169, 120, 255, 0.2);
      border-color: rgba(169, 120, 255, 0.5);
    }

    .content-wrapper {
      margin-top: 2.5rem;
      margin-bottom: 3rem;
    }

    .page-header {
      background: linear-gradient(135deg, rgba(123, 62, 243, 0.25), rgba(15, 2, 31, 0.65));
      border: 1px solid rgba(169, 120, 255, 0.28);
      border-radius: 18px;
      padding: 2.25rem;
      box-shadow: 0 18px 45px rgba(7, 1, 20, 0.45);
      color: #fff;
    }

    .page-header h1 {
      font-size: 2.5rem;
      margin-bottom: 0.75rem;
      font-weight: 700;
    }

    .page-header p {
      margin: 0;
      color: var(--text-muted);
      font-size: 1rem;
    }

    .action-buttons .btn {
      border-radius: 12px;
      padding: 0.6rem 1.2rem;
      font-weight: 600;
      box-shadow: 0 12px 30px rgba(11, 2, 25, 0.35);
      border: none;
    }

    .action-buttons .btn-success,
    .action-buttons .btn-info {
      background: linear-gradient(135deg, #7b3ef3, #9a4fff);
    }

    .action-buttons .btn-warning {
      background: linear-gradient(135deg, #ffa928, #ff7e2f);
    }

    .action-buttons .btn-secondary,
    .action-buttons .btn-outline-secondary {
      background: rgba(255, 255, 255, 0.08);
      color: #fff;
      border: 1px solid rgba(255, 255, 255, 0.18);
    }

    .action-buttons .btn-danger {
      background: linear-gradient(135deg, #ff5c7a, #ff3564);
    }

    .action-buttons .btn-primary {
      background: linear-gradient(135deg, #4f32ff, #7f56ff);
    }

    .glass-card {
      background: var(--card-bg);
      border-radius: 22px;
      padding: 2rem;
      border: 1px solid rgba(169, 120, 255, 0.2);
      box-shadow: 0 18px 40px rgba(8, 2, 20, 0.6);
      backdrop-filter: blur(14px);
    }

    form.glass-card {
      margin-top: 2.5rem;
    }

    label.form-label {
      color: var(--text-muted);
      font-size: 0.85rem;
      text-transform: uppercase;
      letter-spacing: 0.06rem;
    }

    .form-control,
    .form-select {
      background: rgba(15, 2, 31, 0.55);
      border: 1px solid rgba(169, 120, 255, 0.25);
      color: var(--text-primary);
      border-radius: 12px;
      padding: 0.65rem 1rem;
    }

    .form-select {
      appearance: none !important;
      -webkit-appearance: none !important;
      -moz-appearance: none !important;
      background-image: url('/images/arrow-light.png');
      background-repeat: no-repeat;
      background-position: right 0.95rem center;
      background-size: 18px auto;
      padding-right: 2.5rem;
    }

    .form-control:focus,
    .form-select:focus {
      border-color: rgba(169, 120, 255, 0.55);
      box-shadow: 0 0 0 0.15rem rgba(123, 62, 243, 0.25);
      background: rgba(15, 2, 31, 0.75);
    }

    .filters-actions {
      display: flex;
      flex-wrap: wrap;
      gap: 0.8rem;
      margin-top: 1.5rem;
    }

    .filters-actions .btn {
      border-radius: 12px;
      padding: 0.55rem 1.4rem;
      font-weight: 600;
      text-transform: uppercase;
      letter-spacing: 0.05rem;
    }

    .table-wrapper {
      margin-top: 2.5rem;
      background: rgba(14, 4, 28, 0.78);
      border-radius: 20px;
      border: 1px solid rgba(169, 120, 255, 0.18);
      box-shadow: 0 22px 50px rgba(5, 0, 16, 0.65);
      overflow: hidden;
    }

    .table-responsive {
      border-radius: 20px;
    }

    .table-materiel {
      margin-bottom: 0;
      color: var(--text-primary);
    }

    /* --- STOCK TABLE: force one-row, enable horizontal scroll --- */
    .stock-table-wrap {
      overflow-x: auto;
      -webkit-overflow-scrolling: touch;
    }

    .table-stock {
      border-collapse: separate;
      table-layout: fixed;
      min-width: 1280px;
    }

    .table-stock th,
    .table-stock td {
      white-space: nowrap;
      vertical-align: middle;
    }

    .table-stock th:nth-child(3),
    .table-stock td:nth-child(3) {
      max-width: 280px;
      overflow: hidden;
      text-overflow: ellipsis;
    }

    .table-stock th:nth-child(4),
    .table-stock td:nth-child(4) {
      width: 110px;
    }

    .table-stock th:nth-child(5),
    .table-stock td:nth-child(5),
    .table-stock th:nth-child(6),
    .table-stock td:nth-child(6) {
      width: 140px;
    }

    @media (max-width: 1200px) {
      .table-stock th:last-child,
      .table-stock td:last-child {
        position: sticky;
        right: 0;
        background: rgba(22, 18, 37, .92);
        backdrop-filter: blur(2px);
        z-index: 2;
      }
    }

    .table-stock .btn {
      white-space: nowrap;
    }

    .table-stock td .btn-group,
    .table-stock td .btn-wrap {
      display: flex;
      flex-wrap: wrap;
      gap: 0.35rem;
    }

    .table-stock .cell-photo img {
      display: block;
      max-width: 90px;
      height: auto;
      margin: 0 auto;
    }

    @media (max-width: 768px) {
      table.table-stock,
      .table-stock th,
      .table-stock td {
        display: table-cell !important;
      }
    }

    .table-materiel thead th {
      position: sticky;
      top: 0;
      z-index: 5;
      background: linear-gradient(135deg, rgba(79, 50, 255, 0.95), rgba(123, 62, 243, 0.85));
      border-bottom: none;
      color: #fff;
      text-transform: uppercase;
      letter-spacing: 0.05rem;
      font-size: 0.75rem;
      padding: 0.95rem 0.75rem;
    }

    .table-materiel tbody tr {
      background: rgba(12, 2, 28, 0.55);
      transition: transform 0.2s ease, background 0.2s ease;
    }

    .table-materiel tbody tr:hover {
      transform: translateY(-2px);
      background: rgba(123, 62, 243, 0.2);
    }

    .table-materiel tbody td {
      border-color: rgba(169, 120, 255, 0.15);
      vertical-align: middle;
    }

    .table-materiel .btn {
      border-radius: 10px;
      font-size: 0.75rem;
      text-transform: uppercase;
      letter-spacing: 0.04rem;
    }

    .table-materiel img {
      border-radius: 12px;
      box-shadow: 0 12px 24px rgba(4, 0, 12, 0.55);
      border: 1px solid rgba(169, 120, 255, 0.2);
    }

    .modal-content {
      background: linear-gradient(145deg, rgba(10, 3, 24, 0.95), rgba(35, 9, 63, 0.92));
      color: var(--text-primary);
      border: 1px solid rgba(169, 120, 255, 0.3);
      box-shadow: 0 16px 40px rgba(8, 1, 24, 0.65);
    }

    .modal-header {
      border-bottom-color: rgba(169, 120, 255, 0.25);
    }

    .modal-footer {
      border-top-color: rgba(169, 120, 255, 0.25);
    }

    .transfer-btn {
      background: rgba(255, 255, 255, 0.1) !important;
      border: 1px solid rgba(255, 255, 255, 0.18) !important;
      color: #fff !important;
    }

    .transfer-btn[data-action="entree"] {
      background: linear-gradient(135deg, rgba(68, 217, 159, 0.25), rgba(72, 149, 239, 0.35)) !important;
    }

    .transfer-btn[data-action="sortie"] {
      background: linear-gradient(135deg, rgba(255, 91, 122, 0.25), rgba(255, 126, 162, 0.32)) !important;
    }

    .badge.bg-danger {
      background: rgba(255, 99, 132, 0.25) !important;
      border: 1px solid rgba(255, 99, 132, 0.4);
    }

    .top-shortcuts {
      position: fixed;
      top: 6rem;
      right: 2.5rem;
      display: flex;
      gap: 0.75rem;
      z-index: 10;
    }

    .top-shortcuts button {
      border-radius: 999px;
      border: 1px solid rgba(169, 120, 255, 0.35);
      background: rgba(12, 2, 28, 0.65);
      color: var(--text-primary);
      padding: 0.55rem 1.2rem;
      font-weight: 600;
      box-shadow: 0 14px 32px rgba(8, 2, 22, 0.4);
    }

    .top-shortcuts button:hover {
      background: rgba(123, 62, 243, 0.35);
    }

    body.mode-sombre {
      background: #05010b;
      color: var(--text-primary);
    }

    body.mode-sombre .navbar {
      background: linear-gradient(120deg, rgba(5, 0, 12, 0.95), rgba(21, 2, 45, 0.95));
    }

    body.mode-sombre .table-materiel thead th {
      background: linear-gradient(135deg, rgba(21, 2, 45, 0.95), rgba(59, 10, 106, 0.95));
    }

    body.mode-sombre .form-select {
      background-color: rgba(8, 2, 20, 0.85) !important;
      border-color: rgba(169, 120, 255, 0.45) !important;
      background-image: url('/images/arrow-dark.png');
    }

    @media (max-width: 992px) {
      .page-header {
        padding: 1.8rem;
      }

      .page-header h1 {
        font-size: 2rem;
      }

      .top-shortcuts {
        position: static;
        margin-top: 1rem;
        justify-content: flex-start;
      }

      .content-wrapper {
        margin-top: 2.5rem;
      }
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg fixed-top shadow-sm">
    <div class="container-fluid">
      <span class="navbar-brand mb-0 h1">
        <img src="/images/logo.png" alt="Logo Entreprise">
        Stock Chantier
      </span>
      <button id="toggleMode" class="btn btn-outline-secondary">Mode sombre</button>
    </div>
  </nav>

  <div class="top-shortcuts">
    <button onclick="location.href='https://receptionbr.onrender.com/selection.html'">Gestion Tâches</button>
    <button onclick="location.href='https://receptionbr.onrender.com/'">Réception</button>
  </div>

  <div class="container content-wrapper">
    <div class="page-header">
      <h1>Inventaire chantier</h1>
      <p>Pilotez vos stocks sur chantier avec une vue claire, élégante et professionnelle.</p>
    </div>

    <div class="action-buttons d-flex flex-wrap gap-2 mt-4">
  <%
    const chantierCourant = (chantiers || []).find(c => String(c.id) === String(chantierId)) || null;
  %>
  <% if (user && user.role === 'admin') { %>
  <!-- Bouton ici -->
   <!-- <a href="/chantier/ajouter" class="btn btn-primary">Ajouter une livraison chantier</a>-->
  <a
    href="/chantier/ajouterMateriel<%= chantierCourant ? `?chantierId=${encodeURIComponent(chantierCourant.id)}` : '' %>"
    class="btn btn-success"
  >
    Ajouter du matériel dans <%= chantierCourant ? `chantier &laquo; ${chantierCourant.nom} &raquo;` : 'un chantier' %>
  </a>
  <!-- Supprime le bouton "Modifier" global ici -->
  <a href="/chantier/ajouter-chantier" class="btn btn-success">Créer un nouveau chantier</a>
  <a href="/chantier/historique" class="btn btn-warning">Voir l'historique chantier</a>
  <a href="/emplacements" class="btn btn-info">Gérer les emplacements</a>

  <%
    const exportParams = [];
    const pushParam = (key, value) => {
      if (value !== undefined && value !== null && value !== '') {
        exportParams.push(`${key}=${encodeURIComponent(value)}`);
      }
    };
    pushParam('chantierId', chantierId);
    pushParam('nomMateriel', nomMateriel);
    pushParam('categorie', categorie);
    pushParam('emplacement', emplacement);
    pushParam('description', description);
    pushParam('fournisseur', fournisseur);
    pushParam('triNom', triNom);
    pushParam('triAjout', triAjout);
    pushParam('triModification', triModification);
    pushParam('recherche', recherche);
    const exportQuery = exportParams.length ? `?${exportParams.join('&')}` : '';
  %>

  <a href="/chantier/export-pdf<%= exportQuery %>" class="btn btn-danger mb-3">📄 Exporter en PDF</a>
  <a href="/chantier/export-excel<%= exportQuery %>" class="btn btn-primary mb-3">📊 Exporter en Excel</a>


<% } %>


  <a href="/materiel" class="btn btn-secondary">Retour</a>
</div>

<form method="GET" action="/chantier" class="row g-3 glass-card">
  <div class="col-md-3">
    <label for="chantierId" class="form-label">Filtrer par chantier</label>
    <select class="form-select" name="chantierId" id="chantierId">
      <option value="">-- Tous les chantiers --</option>
      <% if (chantiers && chantiers.length > 0) { %>
        <% chantiers.forEach(function(c) { %>
          <option value="<%= c.id %>" <%= (c.id == chantierId) ? 'selected' : '' %>><%= c.nom %> - <%= c.localisation %></option>
        <% }); %>
      <% } %>
    </select>
  </div>

  <div class="col-md-3">
    <label for="nomMateriel" class="form-label">Nom du matériel</label>
    <input type="text" class="form-control" name="nomMateriel" id="nomMateriel" value="<%= nomMateriel || '' %>">
  </div>

  <div class="col-md-3">
  <label for="triNom" class="form-label">Trier par nom materiel</label>
  <select class="form-select" name="triNom" id="triNom">
    <option value="">-- Aucun tri --</option>
    <option value="asc" <%= triNom === 'asc' ? 'selected' : '' %>>Nom A → Z</option>
    <option value="desc" <%= triNom === 'desc' ? 'selected' : '' %>>Nom Z → A</option>
  </select>
</div>

 <div class="col-md-3">
   <label for="triAjout" class="form-label">Ordre d'ajout</label>
   <select class="form-select" name="triAjout" id="triAjout">
     <option value="">-- Aucun tri --</option>
     <option value="desc" <%= triAjout === 'desc' ? 'selected' : '' %>>Plus récent d'abord</option>
     <option value="asc" <%= triAjout === 'asc' ? 'selected' : '' %>>Plus ancien d'abord</option>
   </select>
 </div>

 <input type="hidden" name="triModification" id="triModification" value="<%= triModification || '' %>">
 <div class="col-md-3 d-flex align-items-end">
   <button type="button" id="toggleModif" class="btn btn-outline-secondary">Trier par modification</button>
 </div>


  <div class="col-md-3">
  <label for="categorieSelect" class="form-label">Catégorie</label>
  <select class="form-select" name="categorie" id="categorieSelect">
    <option value="">-- Toutes les catégories --</option>
    <% (categories || []).forEach(function(cat){ %>
      <option value="<%= cat %>" <%= categorie === cat ? 'selected' : '' %>><%= cat %></option>
    <% }); %>
  </select>
</div>


<div class="col-md-3">
  <label for="emplacement" class="form-label">Emplacement</label>
  <select class="form-select" name="emplacement" id="emplacement" style="max-width: 250px;">
    <option value="">-- Tous les emplacements --</option>
    <% if (emplacements && emplacements.length > 0) { %>
      <% emplacements.forEach(function(e) { %>
        <option value="<%= e.nom %>" <%= emplacement === e.nom ? 'selected' : '' %>><%= e.nom %></option>
      <% }); %>
    <% } %>
  </select>
</div>

<div class="col-md-3">
  <label for="fournisseur" class="form-label">Fournisseur</label>
  <select class="form-select" name="fournisseur" id="fournisseur">
    <option value="">-- Tous les fournisseurs --</option>
    <% (fournisseurs || []).forEach(function(f) { %>
      <option value="<%= f %>" <%= fournisseur === f ? 'selected' : '' %>><%= f %></option>
    <% }); %>
  </select>
</div>



  <div class="col-md-3">
  <label for="description" class="form-label">Description</label>
  <input type="text" class="form-control" name="description" id="description" value="<%= description || '' %>">
</div>


 <div class="col-md-3">
   <label for="recherche" class="form-label">Recherche générale</label>
   <input type="text" class="form-control" name="recherche" id="recherche" value="<%= recherche || '' %>">
 </div>


  <div class="col-12 mt-2">
    <div class="filters-actions">
      <button type="submit" class="btn btn-primary">Appliquer les filtres</button>
      <a href="/chantier?reset=1" class="btn btn-secondary">Réinitialiser</a>
    </div>
  </div>
</form>


    <div class="table-wrapper">
      <div class="stock-table-wrap">
        <table class="table table-bordered table-striped table-materiel align-middle table-stock">
      <thead>
        <tr>
          <th class="d-none">ID</th>
          <th class="d-none">Chantier</th>
          <th class="col-designation">Désignation</th>
          <th class="col-photo">Photo</th>
          <th class="col-reference">Référence</th>
          <th class="col-categorie">Categorie</th>
          <th class="col-description">Description</th>
          <th class="col-fournisseur">Fournisseur</th>
          <th class="col-emplacement">Emplacement</th>
          <th class="col-rack">Rack</th>
          <th class="col-compartiment">Compartiment</th>
          <th class="col-niveau">Niveau</th>
          <th class="col-quantite">Qte</th>
          <th class="col-quantite-prevue">Qte prévue</th>
          <th class="col-date">Date prévue</th>
          <th class="col-actions">Actions</th>
        </tr>
      </thead>
      <tbody>
        <% if (materielChantiers && materielChantiers.length > 0) { %>
          <% materielChantiers.forEach(function(mc){ %>
            <tr>
              <td class="d-none" data-label="ID"><%= mc.id %></td>
              <td class="d-none" data-label="Chantier">
                <% if(mc.chantier) { %>
                  <%= mc.chantier.nom %> - <%= mc.chantier.localisation %>
                <% } else { %>
                  N/A
                <% } %>
              </td>
              <td data-label="Désignation" class="col-designation">
                <% if(mc.materiel) { %>
                  <%= mc.materiel.nom %>
                <% } else { %>
                  N/A
                <% } %>
              </td>
              <td data-label="Photo" class="col-photo cell-photo">
                <% if (mc.materiel && mc.materiel.photos && mc.materiel.photos.length > 0) { %>
                  <% const fullPath = mc.materiel.photos[0].chemin
                       .replace(
                         `https://res.cloudinary.com/${process.env.CLOUDINARY_CLOUD_NAME}/image/upload/`,
                         ''
                       );
                  %>
                  <img
                    src="/img-proxy/<%= fullPath %>"
                    width="80"
                    alt="Photo de <%= mc.materiel.nom %>"
                    style="cursor: pointer;" data-bs-toggle="modal" data-bs-target="#photoModal<%= mc.id %>">
                  <!-- Modale -->
                  <div class="modal fade" id="photoModal<%= mc.id %>" tabindex="-1" aria-labelledby="photoModalLabel<%= mc.id %>" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg">
                      <div class="modal-content">
                        <div class="modal-header">
                          <h5 class="modal-title" id="photoModalLabel<%= mc.id %>">Photo de <%= mc.materiel.nom %></h5>
                          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
                        </div>
                        <div class="modal-body text-center">
                          <img src="/img-proxy/<%= fullPath %>" alt="Photo de <%= mc.materiel.nom %>" class="img-fluid rounded">
                        </div>
                      </div>
                    </div>
                  </div>
                <% } else { %>
                  N/A
                <% } %>
              </td>

              <td data-label="Référence" class="col-reference">
                <% if(mc.materiel) { %>
                  <%= mc.materiel.reference %>
                <% } else { %>
                  -
                <% } %>
              </td>
              <td data-label="Categorie" class="col-categorie">
                <% if(mc.materiel) { %>
                  <%= mc.materiel.categorie %>
                <% } else { %>
                  -
                <% } %>
              </td>
              <td data-label="Description" class="col-description">
                <% if(mc.materiel && mc.materiel.description) { %>
                  <%= mc.materiel.description %>
                <% } else { %>
                  -
                <% } %>
              </td>
              <td data-label="Fournisseur" class="col-fournisseur">
                <% if(mc.materiel && mc.materiel.fournisseur) { %>
                  <%= mc.materiel.fournisseur %>
                <% } else { %>
                  -
                <% } %>
              </td>

              <td data-label="Emplacement" class="col-emplacement">
                <%
                  function afficherChemin(emp) {
                    let chemin = emp.nom;
                    let courant = emp;
                    while (courant.parent) {
                    chemin = courant.parent.nom + " > " + chemin;
                    courant = courant.parent;
                  }
                  return chemin;
                }
              %>

              <% if (mc.materiel && mc.materiel.emplacement) { %>
                <%= afficherChemin(mc.materiel.emplacement) %>
              <% } else { %>
                -
              <% } %>

                            </td>

              <td data-label="Rack" class="col-rack"><%= mc.materiel && mc.materiel.rack ? mc.materiel.rack : '-' %></td>
              <td data-label="Compartiment" class="col-compartiment"><%= mc.materiel && mc.materiel.compartiment ? mc.materiel.compartiment : '-' %></td>
              <td data-label="Niveau" class="col-niveau"><%= mc.materiel && mc.materiel.niveau != null ? mc.materiel.niveau : '-' %></td>


              <td data-label="Qte" class="col-quantite"><%= mc.quantite %></td>
              <td data-label="Qte prévue" class="col-quantite-prevue"><%= mc.quantitePrevue != null ? mc.quantitePrevue : '-' %></td>
              <td data-label="Date prévue" class="col-date"><%= mc.dateLivraisonPrevue ? mc.dateLivraisonPrevue.toISOString().split('T')[0] : '-' %></td>
              <td data-label="Actions" class="actions col-actions">
                <%
                  // Trouve la "ligne source" côté chantier courant (pas d'optional chaining ici)
                  var chantierCourantId = (chantierCourant && chantierCourant.id) || null;
                  var sourceMat = null;
                  if (typeof m !== 'undefined' && m && Number(m.chantierId) === Number(chantierCourantId)) {
                    sourceMat = m;
                  } else if (typeof mc !== 'undefined' && mc && mc.materiel && Number(mc.materiel.chantierId) === Number(chantierCourantId)) {
                    sourceMat = mc.materiel;
                  } else if (typeof mc !== 'undefined' && mc && Number(mc.chantierId) === Number(chantierCourantId)) {
                    sourceMat = mc;
                  }
                  var sourceMatId = '';
                  if (sourceMat) {
                    if (typeof sourceMat.materielId !== 'undefined' && sourceMat.materielId !== null) {
                      sourceMatId = sourceMat.materielId;
                    } else {
                      sourceMatId = sourceMat.id;
                    }
                  }
                  var sourceMatNom = (sourceMat && sourceMat.nom)
                                   || (typeof mc !== 'undefined' && mc && mc.materiel && mc.materiel.nom)
                                   || (typeof mc !== 'undefined' && mc && mc.nom)
                                   || '';
                %>
                <div class="btn-wrap">
                  <button
                    type="button"
                    class="btn btn-outline-success btn-sm transfer-btn"
                    data-bs-toggle="modal"
                    data-bs-target="#transferModal"
                    data-action="entree"
                    data-context-type="CHANTIER"
                    data-context-chantier-id="<%= chantierCourant ? chantierCourant.id : '' %>"
                    data-materiel-id="<%= sourceMatId %>"
                    data-materiel-name="<%= sourceMatNom %>"
                    <%= sourceMat ? '' : 'disabled' %>
                  >
                    Entrée
                  </button>
                  <button
                    type="button"
                    class="btn btn-outline-danger btn-sm transfer-btn"
                    data-bs-toggle="modal"
                    data-bs-target="#transferModal"
                    data-action="sortie"
                    data-context-type="CHANTIER"
                    data-context-chantier-id="<%= chantierCourant ? chantierCourant.id : '' %>"
                    data-materiel-id="<%= sourceMatId %>"
                    data-materiel-name="<%= sourceMatNom %>"
                    <%= sourceMat ? '' : 'disabled' %>
                  >
                    Sortie
                  </button>
                  <% if (!sourceMat) { %>
                    <span class="badge bg-danger">Source ID manquant</span>
                  <% } %>
                  <a href="/chantier/materielChantier/info/<%= mc.id %>" class="btn btn-info btn-sm">Info</a>
                  <% if (user && user.role === 'admin') { %>
                    <button type="button" class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#receptionModal<%= mc.id %>">
                      Réceptionner
                    </button>
                    <a href="/chantier/materielChantier/modifier/<%= mc.id %>" class="btn btn-warning btn-sm">Modifier</a>
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal" data-bs-target="#confirmDeleteModal<%= mc.id %>">
                      Supprimer
                    </button>
                    <a href="/chantier/materielChantier/dupliquer/<%= mc.id %>" class="btn btn-outline-primary btn-sm">Dupliquer</a>
                  <% } %>
                </div>

                <% if (user && user.role === 'admin') { %>
                  <div class="modal fade" id="receptionModal<%= mc.id %>" tabindex="-1" aria-labelledby="receptionModalLabel<%= mc.id %>" aria-hidden="true">
                    <div class="modal-dialog">
                      <div class="modal-content">
                        <form action="/chantier/materielChantier/receptionner/<%= mc.id %>" method="POST">
                          <div class="modal-header bg-success text-white">
                            <h5 class="modal-title" id="receptionModalLabel<%= mc.id %>">Réceptionner du matériel</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer"></button>
                          </div>
                          <div class="modal-body">
                            <p class="mb-2"><strong>Matériel :</strong> <%= mc.materiel ? mc.materiel.nom : 'N/A' %></p>
                            <p class="mb-3"><strong>Chantier :</strong> <%= mc.chantier ? mc.chantier.nom : 'N/A' %></p>
                            <div class="mb-3">
                              <label for="quantiteReceptionnee<%= mc.id %>" class="form-label">Quantité réceptionnée</label>
                              <input type="number" class="form-control" id="quantiteReceptionnee<%= mc.id %>" name="quantiteReceptionnee" min="1" required>
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                            <button type="submit" class="btn btn-success">Confirmer</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>

                  <div class="modal fade" id="confirmDeleteModal<%= mc.id %>" tabindex="-1" aria-labelledby="confirmDeleteLabel<%= mc.id %>" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                      <div class="modal-content">
                        <form action="/chantier/materielChantier/supprimer/<%= mc.id %>" method="POST">
                          <div class="modal-header bg-danger text-white">
                            <h5 class="modal-title" id="confirmDeleteLabel<%= mc.id %>">Confirmer la suppression</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer"></button>
                          </div>
                          <div class="modal-body">
                            Êtes-vous sûr de vouloir supprimer ce matériel du chantier ?<br>
                            <strong>Cette action est irréversible.</strong>
                          </div>
                          <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                            <button type="submit" class="btn btn-danger">Supprimer</button>
                          </div>
                        </form>
                      </div>
                    </div>
                  </div>
                <% } %>
              </td>
            </tr>
          <% }); %>
        <% } else { %>
          <tr>
            <td colspan="16" class="text-center">Aucune livraison enregistrée pour les chantiers.</td>
          </tr>
        <% } %>
      </tbody>
      
        </table>
      </div>
    </div>

  </div>

  <% const transferChantiers = Array.isArray(chantiers) ? chantiers : []; %>
  <div class="modal fade" id="transferModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
      <form class="modal-content" id="transferForm" method="POST">
        <div class="modal-header">
          <h5 class="modal-title">
            <span id="transferModalAction">Transfert</span> - <span id="transferModalMateriel"></span>
          </h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fermer"></button>
        </div>
        <div class="modal-body">
          <input type="hidden" name="contextType" id="transferContextType" value="CHANTIER">
          <input type="hidden" name="contextChantierId" id="transferContextChantierId" value="<%= chantierCourant ? chantierCourant.id : '' %>">
          <input type="hidden" name="materielId" id="transferMaterielId" value="">
          <input type="hidden" name="materielName" id="transferMaterielName" value="">

          <div class="mb-3">
            <label for="transferTargetChantierId" class="form-label">Chantier</label>
            <select class="form-select" name="targetChantierId" id="transferTargetChantierId" required>
              <option value="">-- Sélectionner un chantier --</option>
              <% transferChantiers.forEach(function(c) { %>
                <option value="<%= c.id %>"><%= c.nom %><% if (c.localisation) { %> - <%= c.localisation %><% } %></option>
              <% }) %>
            </select>
          </div>

          <div class="mb-3">
            <label for="transferQuantite" class="form-label">Quantité</label>
            <input
              type="number"
              class="form-control"
              id="transferQuantite"
              name="quantite"
              min="0.01"
              step="0.01"
              required
            >
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
          <button type="submit" class="btn btn-primary">Valider</button>
        </div>
      </form>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <script nonce="<%= nonce %>">
    (function () {
      function setNavbarPadding() {
        var nb = document.querySelector('.navbar');
        if (!nb) return;
        var h = nb.offsetHeight || 64;
        document.documentElement.style.setProperty('--navbar-h', h + 'px');
      }

      window.addEventListener('load', setNavbarPadding);
      window.addEventListener('resize', setNavbarPadding);
      document.addEventListener('readystatechange', setNavbarPadding);
    })();
  </script>

  <script nonce="<%= nonce %>">
    const toggleBtn = document.getElementById('toggleMode');
    const body = document.body;
    const navBar = document.querySelector('.navbar');
    const modifBtn = document.getElementById('toggleModif');
    const modifInput = document.getElementById('triModification');
    const transferModalElement = document.getElementById('transferModal');
    const transferForm = document.getElementById('transferForm');
    const transferActionLabel = document.getElementById('transferModalAction');
    const transferMaterielLabel = document.getElementById('transferModalMateriel');
    const transferMaterielNameInput = document.getElementById('transferMaterielName');
    const transferTargetSelect = document.getElementById('transferTargetChantierId');
    const transferQuantityInput = document.getElementById('transferQuantite');

    if (transferModalElement) {
      transferModalElement.addEventListener('show.bs.modal', (event) => {
        const triggerButton = event.relatedTarget;
        if (!transferForm || !triggerButton) {
          return;
        }

        transferForm.reset();
        const action = triggerButton.dataset.action || 'entree';
        transferForm.setAttribute('action', `/transferts/${action}`);
        transferForm.dataset.transferAction = action;

        const setInputValue = (selector, value) => {
          const input = transferForm.querySelector(selector);
          if (input) {
            input.value = value;
          }
        };

        setInputValue('[name="contextType"]', triggerButton.dataset.contextType || 'CHANTIER');
        setInputValue('[name="contextChantierId"]', triggerButton.dataset.contextChantierId || '');
        setInputValue('[name="materielId"]', triggerButton.dataset.materielId || '');
        setInputValue('[name="materielName"]', triggerButton.dataset.materielName || '');

        if (transferActionLabel) {
          transferActionLabel.textContent = action === 'entree' ? 'Entrée' : 'Sortie';
        }
        if (transferMaterielLabel) {
          transferMaterielLabel.textContent = triggerButton.dataset.materielName || '';
        }
        if (transferTargetSelect) {
          transferTargetSelect.value = '';
        }
        if (transferQuantityInput) {
          transferQuantityInput.value = '';
        }
      });
    }

    if (transferForm) {
      transferForm.addEventListener('submit', (event) => {
        const action = transferForm.dataset.transferAction || 'entree';
        const actionLabel = action === 'entree' ? "l'entrée" : 'la sortie';
        const qtyValue = transferQuantityInput ? transferQuantityInput.value.trim() : '';
        const normalizedQty = qtyValue.replace(/,/g, '.');
        const qtyNumber = Number.parseFloat(normalizedQty);
        if (!Number.isFinite(qtyNumber) || qtyNumber <= 0) {
          event.preventDefault();
          return;
        }

        const materialName = transferMaterielNameInput ? transferMaterielNameInput.value : '';
        const selectedOption = transferTargetSelect && transferTargetSelect.selectedIndex >= 0
          ? transferTargetSelect.options[transferTargetSelect.selectedIndex]
          : null;
        const chantierLabel = selectedOption ? selectedOption.text.trim() : '';
        const confirmationMessage = `Confirmer ${actionLabel} de ${qtyValue || qtyNumber} unités\n` +
          `Matériel : ${materialName}\n` +
          `Chantier sélectionné : ${chantierLabel}`;
        if (!window.confirm(confirmationMessage)) {
          event.preventDefault();
        }
      });
    }

    if (toggleBtn) {
      toggleBtn.addEventListener('click', () => {
        body.classList.toggle('mode-sombre');
        if (body.classList.contains('mode-sombre')) {
          navBar.classList.add('navbar-dark');
          toggleBtn.textContent = 'Mode clair';
        } else {
          navBar.classList.remove('navbar-dark');
          toggleBtn.textContent = 'Mode sombre';
        }
      });
    }

    if(modifBtn){
      modifBtn.addEventListener('click', () => {
        modifInput.value = modifInput.value === 'desc' ? 'asc' : 'desc';
        modifBtn.form.submit();
      });
    }
  </script>

</body>
</html>
