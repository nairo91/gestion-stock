<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Ajouter du Mat√©riel dans un Chantier</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <style>

      /* --- style.css --- */

body {
  background-color: #f5f6fa;
  color: #343a40;
  font-family: "Segoe UI", Roboto, sans-serif;
}

.container {
  max-width: 800px;
  margin-top: 2rem;
  margin-bottom: 2rem;
}

/* Carte autour du formulaire */
.form-card {
  background-color: #ffffff;
  border-radius: 0.5rem;
  box-shadow: 0 4px 12px rgba(0,0,0,0.05);
  padding: 2rem;
}

/* Titres */
h2 {
  font-size: 1.75rem;
  margin-bottom: 1.5rem;
  color: #2c3e50;
}

/* Labels plus visibles */
.form-label {
  font-weight: 600;
  color: #495057;
}

/* Champs inputs et selects plus larges et uniformes */
.form-control {
  border-radius: 0.375rem;
  border: 1px solid #ced4da;
  height: calc(1.5em + 1rem + 2px);
  padding: 0.5rem 0.75rem;
  transition: border-color 0.2s, box-shadow 0.2s;
}

.form-control:focus {
  border-color: #4e73df;
  box-shadow: 0 0 0 0.2rem rgba(78, 115, 223, 0.25);
}

/* Bouton principal */
.btn-success {
  background-color: #4e73df;
  border-color: #4e73df;
  font-weight: 600;
  padding: 0.5rem 1.25rem;
  border-radius: 0.375rem;
  transition: background-color 0.2s;
}

.btn-success:hover {
  background-color: #2e59d9;
}

/* Lien retour discret */
a.btn-secondary {
  color: #6c757d;
  text-decoration: none;
  font-weight: 500;
  margin-top: 1rem;
}

a.btn-secondary:hover {
  color: #495057;
  text-decoration: underline;
}

/* Style de la dropdown d‚Äôemplacements */
select#emplacementId.form-control {
  background-color: #f8f9fc;
}

/* Responsive small tweaks */
@media (max-width: 576px) {
  .form-card {
    padding: 1rem;
  }
}


    /* Appliquer l‚Äôic√¥ne personnalis√©e sur les <select> avec la classe form-control */
    select.form-control {
      /* Supprimer l‚Äôapparence native */
      appearance: none !important;
      -webkit-appearance: none !important;
      -moz-appearance: none !important;
      /* Pour Edge/IE */
      &::-ms-expand {
        display: none;
      }
      
      /* Afficher l'ic√¥ne fl√®che pour le th√®me clair */
      background-image: url("/images/arrow-light.png");
      background-repeat: no-repeat;
      background-position: right 0.75rem center;
      background-size: 20px auto;
      padding-right: 2rem;
      
      /* Styles de base */
      background-color: #fff;
      color: #2d3436;
      border: 1px solid #ced4da;
      border-radius: 0.25rem;
    }
    
    /* Mode sombre (optionnel) */
    body.mode-sombre select.form-control {
      background-image: url("/images/arrow-dark.png");
      background-color: #2c2c2c;
      color: #fff;
      border-color: #444;
    }
    /* Appliquer l‚Äôic√¥ne personnalis√©e sur les <select> avec la classe form-control */
    select.form-control {
      /* Supprimer l‚Äôapparence native */
      appearance: none !important;
      -webkit-appearance: none !important;
      -moz-appearance: none !important;
      /* Pour Edge/IE */
      &::-ms-expand {
        display: none;
      }
      
      /* Afficher l'ic√¥ne fl√®che pour le th√®me clair */
      background-image: url("/images/arrow-light.png");
      background-repeat: no-repeat;
      background-position: right 0.75rem center;
      background-size: 20px auto;
      padding-right: 2rem;
      
      /* Styles de base */
      background-color: #fff;
      color: #2d3436;
      border: 1px solid #ced4da;
      border-radius: 0.25rem;
    }
    
    /* Mode sombre (optionnel) */
    body.mode-sombre select.form-control {
      background-image: url("/images/arrow-dark.png");
      background-color: #2c2c2c;
      color: #fff;
      border-color: #444;
    }
  </style>
</head>
<body>
  <div class="container mt-4">
    <h2>Ajouter du Mat√©riel dans un Chantier</h2>
    <form id="ajoutForm" action="/chantier/ajouterMateriel" method="POST" enctype="multipart/form-data">
      <div class="mb-3">
        <label for="categorieSelect" class="form-label">Cat√©gorie</label>
        <select name="categorie" id="categorieSelect" class="form-control" required>
            <option value="" disabled selected>-- Choisir Cat√©gorie --</option>
            <% (categories || []).forEach(function(cat){ %>
              <option value="<%= cat %>"><%= cat %></option>
            <% }) %>
        </select>
        <% if (user && user.role === 'admin') { %>
          <div class="d-flex flex-wrap gap-2 mt-2">
            <button type="button" id="addCategoryBtn" class="btn btn-secondary btn-sm">Ajouter Cat√©gorie</button>
            <button type="button" id="deleteCategoryBtn" class="btn btn-danger btn-sm">Supprimer Cat√©gorie</button>
          </div>
        <% } %>
      </div>
      <div class="mb-3">
        <label for="designationSelect" class="form-label">D√©signation</label>
        <select id="designationSelect" name="designation" class="form-select">
          <option value="">-- S√©lectionner une d√©signation --</option>
        </select>
        <input type="text" name="nom" id="designationInput" class="form-control mt-2" placeholder="Autre d√©signation">
      </div>
      <div class="mb-3">
        <label for="reference" class="form-label">R√©f√©rence</label>
        <input type="text" class="form-control" id="reference" name="reference">
      </div>
      <div class="mb-3">
        <label for="quantite" class="form-label">Quantit√©</label>
        <input type="number" name="quantite" id="quantite" class="form-control" required>
      </div>
      <div class="mb-3">
        <label for="quantitePrevue" class="form-label">Quantit√© pr√©vue</label>
        <input type="number" name="quantitePrevue" id="quantitePrevue" class="form-control">
      </div>
      <div class="mb-3">
        <label for="dateLivraisonPrevue" class="form-label">Date de livraison pr√©vue</label>
        <div class="input-group">
          <span class="input-group-text">üìÖ</span>
          <input type="date" name="dateLivraisonPrevue" id="dateLivraisonPrevue" class="form-control">
        </div>
      </div>
      <div class="mb-3">
        <label for="description" class="form-label">Description</label>
        <textarea name="description" id="description" class="form-control"></textarea>
      </div>
      <div class="mb-3">
        <label for="prix" class="form-label">Prix</label>
        <input type="number" step="0.01" name="prix" id="prix" class="form-control">
      </div>
      <div class="mb-3">
        <label for="fournisseur" class="form-label">Fournisseur</label>
        <input type="text" name="fournisseur" id="fournisseurInput" class="form-control">
        <select id="fournisseurSelect" class="form-select mt-2">
          <option value="">-- S√©lectionner un fournisseur --</option>
          <option value="4 Pieds">4 Pieds</option>
          <option value="BRICOMAN">BRICOMAN</option>
          <option value="CEDEO">CEDEO</option>
          <option value="FORBO">FORBO</option>
          <option value="FOUSSIER">FOUSSIER</option>
          <option value="France'AIR">France'AIR</option>
          <option value="HUSSEIN">HUSSEIN</option>
          <option value="JM EXIM">JM EXIM</option>
          <option value="Jos√©">Jos√©</option>
          <option value="KINEDO">KINEDO</option>
          <option value="LES RIPEURS">LES RIPEURS</option>
          <option value="MPI">MPI</option>
          <option value="ODF">ODF</option>
          <option value="PIXELO">PIXELO</option>
          <option value="RICHARDSON">RICHARDSON</option>
          <option value="SANITINO">SANITINO</option>
          <option value="SONEPAR">SONEPAR</option>
          <option value="SOTEXPRO">SOTEXPRO</option>
          <option value="STMI">STMI</option>
          <option value="TARGETTI">TARGETTI</option>
          <option value="TEMPO">TEMPO</option>
          <option value="Wurth">Wurth</option>
          <option value="pure-com">pure-com</option>
          <option value="Autre">Autre</option>
        </select>
      </div>
      <div class="mb-3">
        <label for="chantierId" class="form-label">Chantier</label>
        <select name="chantierId" id="chantierId" class="form-control" required>
          <option value="" disabled selected>-- Choisir un chantier --</option>
          <% chantiers.forEach(function(c){ %>
            <option value="<%= c.id %>">
              <%= c.nom %> - <%= c.localisation %>
            </option>
          <% }); %>
        </select>
      </div>

 <!-- NOUVEAU : S√©lection de l‚Äôemplacement -->
<div class="mb-3">
  <label for="emplacementId" class="form-label">Emplacement</label>
  <select name="emplacementId" id="emplacementId" class="form-control">
    <option value="">‚Äì Aucun ‚Äì</option>
    <% emplacements.forEach(e => { %>
      <option value="<%= e.id %>">
        <%= e.cheminComplet %> <small>(Chantier #<%= e.chantierId %>)</small>
      </option>
    <% }) %>
  </select>
</div>

<div class="mb-3">
  <label for="rack" class="form-label">Rack</label>
  <input type="text" name="rack" id="rack" class="form-control">
</div>

<div class="mb-3">
  <label for="compartiment" class="form-label">Compartiment</label>
  <input type="text" name="compartiment" id="compartiment" class="form-control">
</div>

<div class="mb-3">
  <label for="niveau" class="form-label">Niveau</label>
  <input type="number" name="niveau" id="niveau" class="form-control">
</div>



        <div class="mb-3">
          <label for="remarque" class="form-label">Remarque</label>
          <textarea name="remarque" id="remarque" class="form-control"></textarea>
        </div>

        <div class="mb-3">
          <label for="photos" class="form-label">Photos</label>
          <input type="file" name="photos" id="photos" class="form-control" multiple>
        </div>
      <button type="submit" class="btn btn-success">Ajouter au chantier</button>
    </form>
    <p><a href="/chantier" class="btn btn-secondary mt-3">Retour au Dashboard Chantier</a></p>
    <% if (user && user.role === 'admin') { %>
      <div class="modal fade" id="confirmDeleteCategoryModal" tabindex="-1" aria-labelledby="confirmDeleteCategoryLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
          <div class="modal-content">
            <div class="modal-header bg-danger text-white">
              <h5 class="modal-title" id="confirmDeleteCategoryLabel">Confirmer la suppression</h5>
              <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Fermer"></button>
            </div>
            <div class="modal-body">
              <p id="confirmDeleteCategoryMessage" class="mb-0"></p>
            </div>
            <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
              <button type="button" class="btn btn-danger" id="confirmDeleteCategoryBtn">Supprimer</button>
            </div>
          </div>
        </div>
      </div>
    <% } %>
  </div>
  <script src="/js/bootstrap.bundle.min.js"></script>
  <script nonce="<%= nonce %>">
    document.addEventListener('DOMContentLoaded', function () {
      const fournisseurSelect = document.getElementById('fournisseurSelect');
      const fournisseurInput = document.getElementById('fournisseurInput');
      if (fournisseurSelect) {
        fournisseurSelect.addEventListener('change', () => {
          fournisseurInput.value = fournisseurSelect.value;
        });
        if (fournisseurInput) {
          fournisseurInput.addEventListener('blur', () => {
            const val = fournisseurInput.value.trim();
            if (!val) return;
            const exists = Array.from(fournisseurSelect.options).some(opt => opt.value.toLowerCase() === val.toLowerCase());
            if (!exists) {
              const option = document.createElement('option');
              option.value = val;
              option.textContent = val;
              fournisseurSelect.appendChild(option);
            }
            fournisseurSelect.value = val;
          });
        }
      }
      const categorieSelect = document.getElementById('categorieSelect');
      const addBtn = document.getElementById('addCategoryBtn');
      if (addBtn) {
        addBtn.addEventListener('click', async () => {
          const nom = prompt('Nouvelle cat√©gorie :');
          if (!nom) return;
          const body = new URLSearchParams();
          body.append('nom', nom);
          const resp = await fetch('/chantier/ajouter-categorie', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: body.toString()
          });
          if (resp.ok) {
            if (!categorieSelect) return;
            const option = document.createElement('option');
            option.value = nom;
            option.textContent = nom;
            categorieSelect.appendChild(option);
            categorieSelect.value = nom;
          } else {
            alert("Erreur lors de l'ajout de la cat√©gorie");
          }
        });
      }
      const deleteBtn = document.getElementById('deleteCategoryBtn');
      const modalElement = document.getElementById('confirmDeleteCategoryModal');
      const confirmDeleteMessage = document.getElementById('confirmDeleteCategoryMessage');
      const confirmDeleteBtn = document.getElementById('confirmDeleteCategoryBtn');
      const deleteCategoryModal = modalElement && typeof bootstrap !== 'undefined'
        ? new bootstrap.Modal(modalElement)
        : null;
      let pendingCategoryValue = null;

      async function requestCategoryDeletion(valeur) {
        if (!categorieSelect) return false;
        const body = new URLSearchParams();
        body.append('nom', valeur);
        try {
          const resp = await fetch('/chantier/supprimer-categorie', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: body.toString()
          });
          if (resp.ok) {
            Array.from(categorieSelect.options).forEach(opt => {
              if (opt.value === valeur) opt.remove();
            });
            categorieSelect.value = '';
            if (categorieSelect.value) {
              categorieSelect.selectedIndex = -1;
            }
            categorieSelect.dispatchEvent(new Event('change'));
            return true;
          } else {
            const data = await resp.json().catch(() => null);
            alert(data?.message || "Erreur lors de la suppression de la cat√©gorie");
          }
        } catch (error) {
          console.error(error);
          alert("Erreur lors de la suppression de la cat√©gorie");
        }
        return false;
      }

      if (deleteBtn && categorieSelect) {
        deleteBtn.addEventListener('click', async () => {
          const valeur = categorieSelect.value;
          if (!valeur) {
            alert('Veuillez s√©lectionner une cat√©gorie √† supprimer.');
            return;
          }
          if (deleteCategoryModal && confirmDeleteBtn && confirmDeleteMessage) {
            pendingCategoryValue = valeur;
            confirmDeleteMessage.textContent = `Supprimer la cat√©gorie "${valeur}" ? Elle sera retir√©e de tous les mat√©riels.`;
            deleteCategoryModal.show();
          } else {
            if (!confirm(`Supprimer la cat√©gorie "${valeur}" ? Elle sera retir√©e de tous les mat√©riels.`)) {
              return;
            }
            await requestCategoryDeletion(valeur);
          }
        });
      }

      if (confirmDeleteBtn && deleteCategoryModal) {
        confirmDeleteBtn.addEventListener('click', async () => {
          if (!pendingCategoryValue) return;
          const originalText = confirmDeleteBtn.textContent;
          confirmDeleteBtn.disabled = true;
          confirmDeleteBtn.textContent = 'Suppression...';
          const success = await requestCategoryDeletion(pendingCategoryValue);
          confirmDeleteBtn.disabled = false;
          confirmDeleteBtn.textContent = originalText;
          if (success) {
            pendingCategoryValue = null;
            deleteCategoryModal.hide();
          }
        });
      }

      if (modalElement) {
        modalElement.addEventListener('hidden.bs.modal', () => {
          pendingCategoryValue = null;
        });
      }
      initDesignationDropdown('categorieSelect', 'designationSelect', 'designationInput');
      });
  </script>
  <script src="/js/designations.js" nonce="<%= nonce %>"></script>
</body>
</html>
