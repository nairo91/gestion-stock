<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Aperçu import Excel</title>
  <link rel="stylesheet" href="/css/bootstrap.min.css">
  <link rel="stylesheet" href="/css/style.css">
  <!-- DataTables CSS (thème minimal, on garde notre charte violette) -->
  <link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
  <style>
    :root{
      --violet-900:#160e33;
      --violet-800:#1b133a;
      --violet-700:#261c55;
      --violet-600:#352373;
      --violet-500:#5c41c5;
      --violet-400:#7b62e3;
      --violet-300:#9a85f0;
      --card-bg: rgba(255,255,255,0.06);
      --card-border: rgba(255,255,255,0.08);
      --text: #eef0ff;
      --muted: #cfd3ff;
      --ok:#1cc88a;
      --warn:#f6c23e;
      --err:#e74a3b;
      --create:#5c41c5; /* violet brand */
      --update:#36b9cc;
    }
    body{
      color:var(--text);
      background: linear-gradient(180deg, var(--violet-900) 0%, var(--violet-700) 45%, var(--violet-600) 100%);
      min-height:100vh;
    }
    h2{ color:#fff; }
    .summary-card{
      background:var(--card-bg);
      border:1px solid var(--card-border);
      border-radius:12px;
      box-shadow:0 8px 24px rgba(0,0,0,.25);
      padding:16px;
      backdrop-filter: blur(4px);
    }
    .badge{ border-radius:999px; padding:.4rem .7rem; font-weight:600; }
    .badge-ok{ background:var(--ok); }
    .badge-warn{ background:var(--warn); color:#1b1b1b; }
    .badge-error{ background:var(--err); }
    .badge-create{ background:var(--create); }
    .badge-update{ background:var(--update); }
    .table-responsive{
      background:var(--card-bg);
      border:1px solid var(--card-border);
      border-radius:12px;
      overflow:hidden;
    }
    table.table{
      color:var(--text);
    }
    .table thead th{
      background: rgba(255,255,255,0.06);
      color:var(--muted);
      border-bottom:1px solid var(--card-border);
      position: sticky;
      top: 0;
      z-index: 1;
    }
    .table td, .table th{
      border-color: var(--card-border);
    }
    .btn-brand{
      background: var(--violet-500);
      border-color: var(--violet-500);
      color:#fff;
      font-weight:600;
    }
    .btn-brand:hover{
      background: var(--violet-400);
      border-color: var(--violet-400);
      color:#fff;
    }
    .alert-soft{
      background: rgba(246,194,62,.15);
      border:1px solid rgba(246,194,62,.35);
      color:#ffe9a8;
      border-radius:10px;
      padding:.75rem 1rem;
    }
    /* Barre d’outils (recherche + filtres) */
    .toolbar{
      background:var(--card-bg);
      border:1px solid var(--card-border);
      border-radius:12px;
      padding:12px;
      margin-bottom:12px;
      gap:12px;
    }
    .toolbar .form-label{ color: var(--muted); font-weight:600; }
    .toolbar .form-select,.toolbar .form-control{
      background: rgba(255,255,255,.06);
      border-color: var(--card-border);
      color: var(--text);
    }
    .toolbar .form-control::placeholder {
      color: var(--muted);
    }
    /* lisibilité des options dans les menus déroulants */
    .toolbar .form-select option {
      color: #1b1b1b;
    }
    .toolbar .form-select:focus,.toolbar .form-control:focus{
      box-shadow: 0 0 0 .25rem rgba(124,98,227,.25);
      border-color: var(--violet-400);
    }
  </style>
</head>
<body class="container mt-4">
  <h2>Aperçu avant import – <%= chantier ? chantier.nom : '' %></h2>

  <div class="summary-card mb-3">
    <div class="d-flex flex-wrap gap-3">
      <span class="badge badge-ok">OK: <%= stats.ok %></span>
      <span class="badge badge-warn">AVERT.: <%= stats.warn %></span>
      <span class="badge badge-error">ERREURS: <%= stats.error %></span>
      <span class="badge badge-create">Créations: <%= stats.create %></span>
      <span class="badge badge-update">Mises à jour: <%= stats.update %></span>
      <span class="ms-auto">Total: <strong><%= stats.total %></strong></span>
    </div>
  </div>

  <div class="mb-3">
    <% if (stats.error > 0) { %>
      <div class="alert-soft mb-2">
        ⚠️ <strong><%= stats.error %></strong> ligne(s) en erreur seront ignorées pendant l’import (elles ne seront pas créées).
      </div>
    <% } %>
    <form action="/chantier/import-excel/confirm" method="POST" class="d-inline">
      <button type="submit" class="btn btn-brand">
        ✅ Importer définitivement
      </button>
    </form>
    <a href="/chantier" class="btn btn-outline-light">Annuler</a>
  </div>

  <!-- Barre d’outils : recherche globale & filtres colonnes -->
  <div class="toolbar d-flex flex-wrap align-items-end">
    <div class="me-3 flex-grow-1" style="min-width:260px">
      <label for="global-search" class="form-label">Recherche</label>
      <input id="global-search" type="search" class="form-control" placeholder="Rechercher dans le tableau (lot, désignation, fournisseur, ...)">
    </div>
    <div class="me-3" style="min-width:180px">
      <label for="filtre-etat" class="form-label">Filtrer par État</label>
      <select id="filtre-etat" class="form-select">
        <option value="">Tous</option>
        <option value="OK">OK</option>
        <option value="Avert.">Avert.</option>
        <option value="Erreur">Erreur</option>
      </select>
    </div>
    <div class="" style="min-width:180px">
      <label for="filtre-op" class="form-label">Filtrer par Opération</label>
      <select id="filtre-op" class="form-select">
        <option value="">Toutes</option>
        <option value="Create">Create</option>
        <option value="Update">Update</option>
      </select>
    </div>
  </div>

  <div class="table-responsive">
    <table id="previewTable" class="table table-bordered table-sm table-sticky">
      <thead>
        <tr>
          <th style="width:100px">État</th>
          <th style="width:100px">Opération</th>
          <th>LOT</th>
          <th>Désignation</th>
          <th>Fournisseur</th>
          <th>Qte prévue</th>
          <th>Raison</th>
        </tr>
      </thead>
      <tbody>
        <% (rows || []).forEach(function(r){ %>
          <tr>
            <td>
              <% if (r.status === 'ok') { %>
                <span class="badge badge-ok">OK</span>
              <% } else if (r.status === 'warn') { %>
                <span class="badge badge-warn">Avert.</span>
              <% } else { %>
                <span class="badge badge-error">Erreur</span>
              <% } %>
            </td>
            <td>
              <% if (r.operation === 'update') { %>
                <span class="badge badge-update">Update</span>
              <% } else { %>
                <span class="badge badge-create">Create</span>
              <% } %>
            </td>
            <td><%= r.lot %></td>
            <td><%= r.designation %></td>
            <td><%= r.fournisseur || '' %></td>
            <td><%= (r.qtePrevue != null) ? r.qtePrevue : '' %></td>
            <td><%= r.reason || '' %></td>
          </tr>
        <% }); %>
      </tbody>
    </table>
  </div>

  <!-- jQuery + DataTables (CDN) -->
  <script src="https://code.jquery.com/jquery-3.7.1.min.js" crossorigin="anonymous"></script>
  <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
  <script>
    (function(){
      // Initialisation DataTable
      const table = $('#previewTable').DataTable({
        paging: true,
        pageLength: 25,
        lengthMenu: [ [25,50,100,-1], [25,50,100,'Tous'] ],
        order: [[1,'asc'], [2,'asc']], // Opération, puis LOT
        language: { url: 'https://cdn.datatables.net/plug-ins/1.13.6/i18n/fr-FR.json' },
        // On garde notre toolbar custom, donc on cache la barre de recherche DT native.
        dom: 'lrtip'
      });

      // Recherche globale custom
      $('#global-search').on('input', function(){
        table.search(this.value).draw();
      });

      // Filtres de colonnes
      // Filtres simples par texte (plus robustes) pour État et Opération
      $('#filtre-etat').on('change', function(){
        const v = this.value;
        table.column(0).search(v || '', false, false).draw();
      });
      $('#filtre-op').on('change', function(){
        const v = this.value;
        table.column(1).search(v || '', false, false).draw();
      });
    })();
  </script>
</body>
</html>
